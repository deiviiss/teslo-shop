diff --git a/prisma/schema.prisma b/prisma/schema.prisma
index f444bb7..9ccb76d 100644
--- a/prisma/schema.prisma
+++ b/prisma/schema.prisma
@@ -35,6 +35,13 @@ enum Role {
   user
 }
 
+enum Status {
+  unpaid
+  paided
+  shipped
+  delivered
+}
+
 model Category {
   id          String    @id @default(uuid())
   name        String
@@ -139,6 +146,7 @@ model Order {
   total        Float
   itemsInOrder Int
   isPaid       Boolean   @default(false)
+  status       Status    @default(unpaid)
   paidAt       DateTime?
 
   createdAt DateTime  @default(now())
diff --git a/src/actions/index.ts b/src/actions/index.ts
index 6db0572..61cd4f6 100644
--- a/src/actions/index.ts
+++ b/src/actions/index.ts
@@ -20,6 +20,7 @@ export { getOrdersByUser } from './order/get-orders-by-user'
 export { getPaginatedOrders } from './order/get-paginated-orders'
 export { placeOrder } from './order/place-order'
 export { deleteOrderById } from './order/delete-order-by-id'
+export { changeOrderStatus } from './order/change-order-status'
 
 // payments
 export { setTransactionId } from './payments/set-transaction-id'
diff --git a/src/actions/order/delete-order-by-id.ts b/src/actions/order/delete-order-by-id.ts
index 6b18d1a..6e33365 100644
--- a/src/actions/order/delete-order-by-id.ts
+++ b/src/actions/order/delete-order-by-id.ts
@@ -10,7 +10,7 @@ export const deleteOrderById = async (id: string) => {
   if (!user) {
     return {
       ok: false,
-      message: 'Should be authenticated to get order by id'
+      message: 'Se requiere permisos de administrador'
     }
   }
 
diff --git a/src/actions/order/get-order-by-id.ts b/src/actions/order/get-order-by-id.ts
index 3bbe631..26171eb 100644
--- a/src/actions/order/get-order-by-id.ts
+++ b/src/actions/order/get-order-by-id.ts
@@ -9,7 +9,7 @@ export const getOrderById = async (id: string) => {
   if (!user) {
     return {
       ok: false,
-      message: 'Should be authenticated to get order by id'
+      message: 'Se requiere permisos de administrador'
     }
   }
 
diff --git a/src/actions/order/get-paginated-orders.ts b/src/actions/order/get-paginated-orders.ts
index 5aa142c..3e9b2b8 100644
--- a/src/actions/order/get-paginated-orders.ts
+++ b/src/actions/order/get-paginated-orders.ts
@@ -10,48 +10,58 @@ interface PaginationOptions {
 }
 
 export const getPaginatedOrders = async ({ page = 1, take = 12 }: PaginationOptions) => {
-  const isAdmin = await validateUserAdmin()
+  try {
+    const isAdmin = await validateUserAdmin()
 
-  if (!isAdmin) {
-    return {
-      ok: false,
-      message: 'Debe estar autenticado para realizar esta acción'
+    if (!isAdmin) {
+      return {
+        ok: false,
+        message: 'Debe estar autenticado para realizar esta acción',
+        orders: null
+      }
     }
-  }
 
-  page = validatePageNumber(page)
-
-  const orders = await prisma.order.findMany({
-    take,
-    skip: (page - 1) * take,
-    orderBy: {
-      createdAt: 'desc'
-    },
-    include: {
-      orderAddresses: {
-        select: {
-          firstName: true,
-          lastName: true
+    page = validatePageNumber(page)
+
+    const orders = await prisma.order.findMany({
+      take,
+      skip: (page - 1) * take,
+      orderBy: {
+        createdAt: 'desc'
+      },
+      include: {
+        orderAddresses: {
+          select: {
+            firstName: true,
+            lastName: true
+          }
         }
       }
-    }
-  })
+    })
 
-  if (!orders) {
-    return {
-      ok: false,
-      message: 'No se encontraron pedidos'
+    if (orders.length === 0) {
+      return {
+        ok: false,
+        message: 'No se encontraron pedidos',
+        orders: null
+      }
     }
-  }
 
-  const totalCount = await prisma.order.count({})
+    const totalCount = await prisma.order.count({})
 
-  const totalPages = Math.ceil(totalCount / take)
+    const totalPages = Math.ceil(totalCount / take)
 
-  return {
-    ok: true,
-    orders,
-    currentPage: page,
-    totalPages
+    return {
+      ok: true,
+      orders,
+      currentPage: page,
+      totalPages
+    }
+  } catch (error) {
+    return {
+      ok: false,
+      message: 'Error al obtener los pedidos, contacta a soporte',
+      orders: null
+    }
   }
 }
diff --git a/src/actions/payments/paypal-check-payment.ts b/src/actions/payments/paypal-check-payment.ts
index 4bb0d31..b1f6dc1 100644
--- a/src/actions/payments/paypal-check-payment.ts
+++ b/src/actions/payments/paypal-check-payment.ts
@@ -39,6 +39,7 @@ export const paypalCheckPayment = async (transactionId: string) => {
       where: { id: orderId },
       data: {
         isPaid: true,
+        status: 'paided',
         paidAt: new Date()
       }
     })
diff --git a/src/actions/products/delete-product-by-id-size.ts b/src/actions/products/delete-product-by-id-size.ts
index 69d4d74..6cc7ce6 100644
--- a/src/actions/products/delete-product-by-id-size.ts
+++ b/src/actions/products/delete-product-by-id-size.ts
@@ -11,7 +11,7 @@ export const deleteProductByIdAndSize = async (id: string, size: string) => {
   if (!user) {
     return {
       ok: false,
-      message: 'Should be authenticated to get order by id'
+      message: 'Se requiere permisos de administrador'
     }
   }
 
diff --git a/src/actions/products/delete-product-by-id.ts b/src/actions/products/delete-product-by-id.ts
index b9c648c..ccce9cc 100644
--- a/src/actions/products/delete-product-by-id.ts
+++ b/src/actions/products/delete-product-by-id.ts
@@ -10,7 +10,7 @@ export const deleteProductById = async (id: string) => {
   if (!user) {
     return {
       ok: false,
-      message: 'Should be authenticated to get order by id'
+      message: 'Se requiere permisos de administrador'
     }
   }
 
diff --git a/src/app/(shop)/admin/orders/page.tsx b/src/app/(shop)/admin/orders/page.tsx
index f912432..4b0ddec 100644
--- a/src/app/(shop)/admin/orders/page.tsx
+++ b/src/app/(shop)/admin/orders/page.tsx
@@ -1,8 +1,8 @@
 import Link from 'next/link'
 import { redirect } from 'next/navigation'
-import { IoCardOutline } from 'react-icons/io5'
+
 import { getPaginatedOrders, validateUserAdmin } from '@/actions'
-import { CardOrderAdmin, MenuOptions, Pagination, Title } from '@/components'
+import { CardOrderAdmin, Pagination, TableOrder, Title } from '@/components'
 
 interface Props {
   searchParams: {
@@ -21,7 +21,7 @@ export default async function OrdersPage({ searchParams }: Props) {
     redirect('/auth/login')
   }
 
-  if (orders?.length === 0) {
+  if (!orders) {
     return (
       <div className='flex flex-col gap-3 items-center justify-center h-[300px] max-w-[920px] mx-auto my-5 text-center'>
 
@@ -39,7 +39,8 @@ export default async function OrdersPage({ searchParams }: Props) {
     const orderItem = {
       id: order.id,
       name: `${order.orderAddresses?.firstName} ${order.orderAddresses?.lastName}`,
-      isPaid: order.isPaid
+      isPaid: order.isPaid,
+      status: order.status
     }
 
     return orderItem
@@ -58,62 +59,7 @@ export default async function OrdersPage({ searchParams }: Props) {
       </div>
 
       <div className="hidden sm:block mb-10 overflow-auto">
-        <table className="min-w-full">
-          <thead className="bg-gray-200 border-b">
-            <tr>
-              <th scope="col" className="text-sm font-medium text-gray-900 px-6 py-4 text-left">
-                #ID
-              </th>
-              <th scope="col" className="text-sm font-medium text-gray-900 px-6 py-4 text-left">
-                Nombre completo
-              </th>
-              <th scope="col" className="text-sm font-medium text-gray-900 px-6 py-4 text-left">
-                Estado
-              </th>
-              <th scope="col" className="text-sm font-medium text-gray-900 px-6 py-4 text-center">
-                Opciones
-              </th>
-            </tr>
-          </thead>
-          <tbody>
-            {
-              orders?.map(order => (
-                <tr
-                  key={order.id}
-                  className="bg-white border-b transition duration-300 ease-in-out hover:bg-gray-100">
-
-                  <td className="px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900">
-                    {order.id.split('-').at(-1)}
-                  </td>
-                  <td className="text-sm text-gray-900 font-light px-6 py-4 whitespace-nowrap">
-                    {order.orderAddresses?.firstName} {order.orderAddresses?.lastName}
-                  </td>
-                  <td className="flex items-center text-sm  text-gray-900 font-light px-6 py-4 whitespace-nowrap">
-                    {
-                      order.isPaid
-                        ? (
-                          <>
-                            <IoCardOutline className="text-green-800" />
-                            <span className='mx-2 text-green-800'>Pagado</span>
-                          </>)
-                        : (
-                          <>
-                            <IoCardOutline className="text-red-800" />
-                            <span className='mx-2 text-red-800'>No Pagado</span>
-                          </>)
-                    }
-
-                  </td>
-                  <td className="text-sm text-gray-900 font-light px-6 text-center">
-                    <MenuOptions orderId={order.id} />
-                  </td>
-
-                </tr>
-              ))
-            }
-          </tbody>
-        </table>
-
+        <TableOrder orders={orders} />
       </div>
       <Pagination totalPages={totalPages || 1} />
     </>
diff --git a/src/app/(shop)/orders/page.tsx b/src/app/(shop)/orders/page.tsx
index 1aa8eff..895671c 100644
--- a/src/app/(shop)/orders/page.tsx
+++ b/src/app/(shop)/orders/page.tsx
@@ -2,7 +2,7 @@ import Link from 'next/link'
 import { redirect } from 'next/navigation'
 import { IoCardOutline } from 'react-icons/io5'
 import { getOrdersByUser } from '@/actions'
-import { CardOrder, Pagination, Title } from '@/components'
+import { CardOrder, Pagination, StatusNameWithIcon, Title } from '@/components'
 
 interface Props {
   searchParams: {
@@ -36,7 +36,8 @@ export default async function OrdersPage({ searchParams }: Props) {
     const orderItem = {
       id: order.id,
       name: `${order.orderAddresses?.firstName} ${order.orderAddresses?.lastName}`,
-      isPaid: order.isPaid
+      isPaid: order.isPaid,
+      status: order.status
     }
 
     return orderItem
@@ -65,7 +66,10 @@ export default async function OrdersPage({ searchParams }: Props) {
                 Nombre completo
               </th>
               <th scope="col" className="text-sm font-medium text-gray-900 px-6 py-4 text-left">
-                Estado
+                Estado del pago
+              </th>
+              <th scope="col" className="text-sm font-medium text-gray-900 px-6 py-4 text-left">
+                Estado del pedido
               </th>
               <th scope="col" className="text-sm font-medium text-gray-900 px-6 py-4 text-left">
                 Opciones
@@ -91,7 +95,9 @@ export default async function OrdersPage({ searchParams }: Props) {
                         ? (
                           <>
                             <IoCardOutline className="text-green-800" />
-                            <span className='mx-2 text-green-800'>Pagado</span>
+                            <span className='mx-2 text-green-800'>
+                              Pagado
+                            </span>
                           </>)
                         : (
                           <>
@@ -99,7 +105,9 @@ export default async function OrdersPage({ searchParams }: Props) {
                             <span className='mx-2 text-red-800'>No Pagado</span>
                           </>)
                     }
-
+                  </td>
+                  <td className="text-sm text-gray-900 font-light px-6 py-4 whitespace-nowrap">
+                    <StatusNameWithIcon status={order.status} />
                   </td>
                   <td className="text-sm text-gray-900 font-light px-6 ">
                     <Link
diff --git a/src/components/index.ts b/src/components/index.ts
index 2ad9d9e..e79c63f 100644
--- a/src/components/index.ts
+++ b/src/components/index.ts
@@ -4,8 +4,10 @@ export * from './auth/ButtonLogout'
 // orders
 export { OrderStatus } from './orders/OrderStatus'
 export { MenuOptions } from './orders-table/MenuOptions'
+export { StatusNameWithIcon } from './orders/StatusNameWithIcon'
 export { CardOrder } from './orders/card/CardOrder'
 export { CardOrderAdmin } from './orders/card/CardOrderAdmin'
+export { TableOrder } from './orders-table/TableOrder'
 
 // Providers
 export * from './providers/Providers'
diff --git a/src/components/orders-table/MenuOptions.tsx b/src/components/orders-table/MenuOptions.tsx
index d07e416..8a688a7 100644
--- a/src/components/orders-table/MenuOptions.tsx
+++ b/src/components/orders-table/MenuOptions.tsx
@@ -1,18 +1,20 @@
 'use client'
 
+import { type Status } from '@prisma/client'
+import { EyeIcon } from 'lucide-react'
 import Link from 'next/link'
-import { IoTrashOutline, IoEllipsisHorizontalSharp, IoAlertCircleOutline } from 'react-icons/io5'
+import { IoTrashOutline, IoEllipsisHorizontalSharp, IoSwapHorizontalOutline } from 'react-icons/io5'
 import { toast } from 'sonner'
-import { deleteOrderById } from '@/actions'
+import { changeOrderStatus, deleteOrderById, getOrderById } from '@/actions'
 import { Button } from '@/components/ui/button'
 import {
   DropdownMenu,
   DropdownMenuContent,
   DropdownMenuItem,
-  DropdownMenuLabel,
   DropdownMenuSeparator,
   DropdownMenuTrigger
 } from '@/components/ui/dropdown-menu'
+import { statusNameSpanish } from '@/utils'
 
 interface Props {
   orderId: string
@@ -71,6 +73,94 @@ export const MenuOptions = ({ orderId }: Props) => {
     })
   }
 
+  const openConfirmationChangeStatus = async () => {
+    const { order } = await getOrderById(orderId)
+
+    if (!order) {
+      toast.error('Pedido no encontrado', {
+        position: 'top-right',
+        duration: 2000
+      })
+      return
+    }
+
+    let status: Status = order.status
+
+    if (order.status === 'unpaid') {
+      toast.error('El pedido no se ha pagado no se puede cambiar', {
+        position: 'top-right',
+        duration: 2000
+      })
+      return
+    }
+
+    if (order.status === 'paided') {
+      status = 'shipped'
+    }
+
+    if (order.status === 'shipped') {
+      status = 'delivered'
+    }
+
+    if (order.status === 'delivered') {
+      toast.error('Pedido entregado no se puede cambiar', {
+        position: 'top-right',
+        duration: 2000
+      })
+      return
+    }
+
+    toast('Cambiar status', {
+      description: `¿Estás seguro? Se cambiara el estado del pedido #${orderId.split('-').at(-1)} a ${statusNameSpanish[status]}`,
+      position: 'top-right',
+      duration: Infinity,
+      className: 'grid grid-cols-[1fr,110px] items-start justify-center text-sm p-2 col-span-2 pb-4',
+      classNames: {
+        content: 'flex items-start justify-center text-sm col-span-4 p-2'
+      },
+      actionButtonStyle: {
+        color: 'white',
+        backgroundColor: '#1E40AF',
+        font: 'message-box',
+        padding: '0.5rem 1rem',
+        height: '2rem'
+      },
+      action: {
+        label: 'Confirmar',
+        onClick: async () => { await handleChangeStatus(orderId, status) }
+      },
+      cancel:
+      {
+        label: 'Cancelar',
+        onClick: () => { toast.dismiss() }
+      },
+      cancelButtonStyle: {
+        color: 'white',
+        backgroundColor: 'red',
+        font: 'message-box',
+        padding: '0.5rem 1rem',
+        height: '2rem'
+      }
+    })
+  }
+
+  const handleChangeStatus = async (orderId: string, status: Status) => {
+    const { ok, message } = await changeOrderStatus(orderId, status)
+
+    if (!ok) {
+      toast.error(message, {
+        position: 'top-right',
+        duration: 2000
+      })
+      return
+    }
+
+    toast.success(message, {
+      position: 'top-right',
+      duration: 2000
+    })
+  }
+
   return (
     <DropdownMenu>
       <DropdownMenuTrigger>
@@ -80,27 +170,45 @@ export const MenuOptions = ({ orderId }: Props) => {
         </Button>
       </DropdownMenuTrigger>
       <DropdownMenuContent>
-        <DropdownMenuLabel>Seleccione</DropdownMenuLabel>
+        <DropdownMenuItem>
+          <EyeIcon className="h-3.5 w-3.5" />
+          <Button
+            size='sm'
+            variant='ghost'
+            className='h-6 gap-1'
+            asChild
+          >
+            <Link
+              href={`/orders/${orderId}`}
+            >
+              Ver pedido
+            </Link>
+          </Button>
+        </DropdownMenuItem>
         <DropdownMenuSeparator />
         <DropdownMenuItem>
-          <IoAlertCircleOutline className='h-4 w-4 mr-2' />
-          <Link
-            href={`/orders/${orderId}`}
-            className="hover:underline">
-            Ver pedido
-          </Link>
+          <IoSwapHorizontalOutline className="h-3.5 w-3.5" />
+          <Button
+            size='sm'
+            variant='ghost'
+            className='h-6 gap-1'
+            onClick={() => { openConfirmationChangeStatus() }}
+          >
+            Cambiar estado
+          </Button>
         </DropdownMenuItem>
         <DropdownMenuItem>
-          <IoTrashOutline className='h-4 w-4 mr-2' />
-          <button
-            className="hover:underline"
+          <IoTrashOutline className="h-3.5 w-3.5" />
+          <Button
+            size='sm'
+            variant='ghost'
+            className='h-6'
             onClick={() => { openConfirmationDelete() }}
           >
             Eliminar pedido
-          </button>
+          </Button>
         </DropdownMenuItem>
       </DropdownMenuContent>
     </DropdownMenu>
-
   )
 }
diff --git a/src/components/orders/card/CardOrder.tsx b/src/components/orders/card/CardOrder.tsx
index c7b6723..4fd0531 100644
--- a/src/components/orders/card/CardOrder.tsx
+++ b/src/components/orders/card/CardOrder.tsx
@@ -4,69 +4,83 @@ import { CopyIcon, EyeIcon } from 'lucide-react'
 import Link from 'next/link'
 import { IoCardOutline } from 'react-icons/io5'
 import { toast } from 'sonner'
+import { StatusNameWithIcon } from '@/components'
 import { Button } from '@/components/ui/button'
-import { Card, CardDescription, CardHeader, CardTitle } from '@/components/ui/card'
+import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card'
+import { type IOrderCard } from '@/interfaces'
 
 interface Props {
-  order: {
-    id: string
-    name: string
-    isPaid: boolean
-  }
+  order: IOrderCard
 }
 
 export const CardOrder = ({ order }: Props) => {
-  const { name, id, isPaid } = order
+  const { name, id, isPaid, status } = order
 
   return (
     <Card className="overflow-hidden">
-      <CardHeader className="flex flex-row items-start bg-muted/50">
+      <CardHeader className="flex flex-row items-start bg-muted/50 p-4">
         <div className="grid gap-0.5">
           <CardTitle className="group flex items-center gap-2 text-lg">
-            Orden #{id.split('-').at(-1)}
-            <div className="relative">
-              <Button
-                size="icon"
-                variant="outline"
-                onClick={() => {
-                  navigator.clipboard.writeText(id)
-                  toast('ID de orden copiado al portapapeles', {
-                    position: 'top-right'
-                  })
-                }}
-                className="h-6 w-6 opacity-0 transition-opacity group-hover:opacity-100 absolute"
-              >
-                <CopyIcon className="h-3 w-3" />
-                <span className="sr-only">Copiar ID de orden</span>
-              </Button>
-            </div>
+            Pedido #{id.split('-').at(-1)}
+            <Button
+              size="icon"
+              variant="outline"
+              onClick={() => {
+                navigator.clipboard.writeText(id)
+                toast('ID de pedido copiado al portapapeles', {
+                  position: 'top-right'
+                })
+              }}
+              className="h-6 w-6 opacity-0 transition-opacity group-hover:opacity-100 absolute right-0"
+            >
+              <CopyIcon className="h-3 w-3" />
+              <span className="sr-only">Copiar ID de pedido</span>
+            </Button>
           </CardTitle>
-          <CardDescription>Cliente: {name}</CardDescription>
-          <div className="flex items-center gap-2 text-sm text-muted-foreground">
-            {isPaid
-              ? (
-                <>
-                  <IoCardOutline className="text-green-800" />
-                  <span className='text-green-800'>Pagado</span>
-                </>)
-              : (
-                <>
-                  <IoCardOutline className="text-red-800" />
-                  <span className='text-red-800'>No Pagado</span>
-                </>)}
-          </div>
         </div>
-
-        <Button asChild size="sm" variant="outline" className="h-8 gap-1">
-          <Link
-            href={`/orders/${id}`}
-            className="hover:underline ml-auto flex items-center gap-2">
-            <EyeIcon className="h-3.5 w-3.5" />
-            <span className='hidden min-[450px]:block'>Ver pedido</span>
-          </Link>
-        </Button>
-
+        <div className="ml-auto flex items-center gap-1">
+          <Button asChild size="sm" variant="outline" className="h-8 gap-1">
+            <Link
+              href={`/orders/${id}`}
+              className="flex items-center gap-2">
+              <EyeIcon className="h-3.5 w-3.5" />
+              <span className='hidden min-[500px]:block'>Ver pedido</span>
+            </Link>
+          </Button>
+        </div>
       </CardHeader>
+      <CardContent className="p-6 text-sm">
+        <div className="grid gap-3">
+          <CardDescription className="flex items-center justify-start gap-2">
+            <span className="font-semibold">Cliente</span>
+            <span>{name}</span>
+          </CardDescription>
+          {/* status paid */}
+          <CardDescription className="flex items-center justify-start gap-2">
+            <span className="font-semibold">Estado del pago</span>
+            {
+              isPaid
+                ? (
+                  <div className='flex items-center'>
+                    <IoCardOutline className="text-green-800" />
+                    <span className='mx-1 text-green-800'>
+                      Pagado
+                    </span>
+                  </div>)
+                : (
+                  <div className='flex items-center'>
+                    <IoCardOutline className="text-red-800" />
+                    <span className='mx-1 text-red-800'>No Pagado</span>
+                  </div>)
+            }
+          </CardDescription>
+          {/* status order */}
+          <CardDescription className="flex items-center justify-start gap-2">
+            <span className="font-semibold">Estado del pedido</span>
+            <StatusNameWithIcon status={status} />
+          </CardDescription>
+        </div>
+      </CardContent>
     </Card>
   )
 }
diff --git a/src/components/orders/card/CardOrderAdmin.tsx b/src/components/orders/card/CardOrderAdmin.tsx
index 10b9bba..8e59520 100644
--- a/src/components/orders/card/CardOrderAdmin.tsx
+++ b/src/components/orders/card/CardOrderAdmin.tsx
@@ -1,23 +1,25 @@
 'use client'
 
-import { CopyIcon, EyeIcon, TrashIcon } from 'lucide-react'
+import { type Status } from '@prisma/client'
+import { CopyIcon, EyeIcon } from 'lucide-react'
 import Link from 'next/link'
-import { IoCardOutline } from 'react-icons/io5'
+import { IoEllipsisHorizontalSharp, IoCardOutline, IoSwapHorizontalOutline, IoTrashOutline } from 'react-icons/io5'
 import { toast } from 'sonner'
-import { deleteOrderById } from '@/actions'
+import { changeOrderStatus, deleteOrderById } from '@/actions'
+import { StatusNameWithIcon } from '@/components'
 import { Button } from '@/components/ui/button'
-import { Card, CardDescription, CardHeader, CardTitle } from '@/components/ui/card'
+import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card'
+import { DropdownMenu, DropdownMenuContent, DropdownMenuItem, DropdownMenuTrigger } from '@/components/ui/dropdown-menu'
+import { type IOrderCard } from '@/interfaces'
+import { statusNameSpanish } from '@/utils'
 
 interface Props {
-  order: {
-    id: string
-    name: string
-    isPaid: boolean
-  }
+  order: IOrderCard
 }
 
 export const CardOrderAdmin = ({ order }: Props) => {
-  const { name, id, isPaid } = order
+  const { name, id, isPaid, status } = order
+
   const openConfirmationDelete = () => {
     toast('Eliminar pedido', {
       description: `¿Estás seguro? Se eliminara el pedido #${id.split('-').at(-1)} el inventario se actualizara`,
@@ -70,65 +72,182 @@ export const CardOrderAdmin = ({ order }: Props) => {
     })
   }
 
+  const openConfirmationChangeStatus = async () => {
+    let statusUpdated: Status = status
+
+    if (status === 'unpaid') {
+      toast.error('El pedido no se ha pagado no se puede cambiar', {
+        position: 'top-right',
+        duration: 2000
+      })
+      return
+    }
+
+    if (status === 'paided') {
+      statusUpdated = 'shipped'
+    }
+
+    if (status === 'shipped') {
+      statusUpdated = 'delivered'
+    }
+
+    if (status === 'delivered') {
+      toast.error('Pedido entregado no se puede cambiar', {
+        position: 'top-right',
+        duration: 2000
+      })
+      return
+    }
+
+    toast('Cambiar status', {
+      description: `¿Estás seguro? Se cambiara el estado del pedido #${id.split('-').at(-1)} a ${statusNameSpanish[statusUpdated]}`,
+      position: 'top-right',
+      duration: Infinity,
+      className: 'grid grid-cols-[1fr,110px] items-start justify-center text-sm p-2 col-span-2 pb-4',
+      classNames: {
+        content: 'flex items-start justify-center text-sm col-span-4 p-2'
+      },
+      actionButtonStyle: {
+        color: 'white',
+        backgroundColor: '#1E40AF',
+        font: 'message-box',
+        padding: '0.5rem 1rem',
+        height: '2rem'
+      },
+      action: {
+        label: 'Confirmar',
+        onClick: async () => { await handleChangeStatus(id, statusUpdated) }
+      },
+      cancel:
+      {
+        label: 'Cancelar',
+        onClick: () => { toast.dismiss() }
+      },
+      cancelButtonStyle: {
+        color: 'white',
+        backgroundColor: 'red',
+        font: 'message-box',
+        padding: '0.5rem 1rem',
+        height: '2rem'
+      }
+    })
+  }
+
+  const handleChangeStatus = async (orderId: string, status: Status) => {
+    const { ok, message } = await changeOrderStatus(orderId, status)
+
+    if (!ok) {
+      toast.error(message, {
+        position: 'top-right',
+        duration: 2000
+      })
+      return
+    }
+
+    toast.success(message, {
+      position: 'top-right',
+      duration: 2000
+    })
+  }
+
   return (
     <Card className="overflow-hidden">
-      <CardHeader className="flex flex-row items-start bg-muted/50">
+      <CardHeader className="flex flex-row items-start bg-muted/50 p-4">
         <div className="grid gap-0.5">
           <CardTitle className="group flex items-center gap-2 text-lg">
-            Orden #{id.split('-').at(-1)}
-            <div className="relative">
-              <Button
-                size="icon"
-                variant="outline"
-                onClick={() => {
-                  navigator.clipboard.writeText(id)
-                  toast('ID de orden copiado al portapapeles', {
-                    position: 'top-right'
-                  })
-                }}
-                className="h-6 w-6 opacity-0 transition-opacity group-hover:opacity-100 absolute"
-              >
-                <CopyIcon className="h-3 w-3" />
-                <span className="sr-only">Copiar ID de orden</span>
-              </Button>
-            </div>
+            Pedido #{id.split('-').at(-1)}
+            <Button
+              size="icon"
+              variant="outline"
+              onClick={() => {
+                navigator.clipboard.writeText(id)
+                toast('ID de pedido copiado al portapapeles', {
+                  position: 'top-right'
+                })
+              }}
+              className="h-6 w-6 opacity-0 transition-opacity group-hover:opacity-100 absolute right-0"
+            >
+              <CopyIcon className="h-3 w-3" />
+              <span className="sr-only">Copiar ID de pedido</span>
+            </Button>
           </CardTitle>
-          <CardDescription>Cliente: {name}</CardDescription>
-          <div className="flex items-center gap-2 text-sm text-muted-foreground">
-            {isPaid
-              ? (
-                <>
-                  <IoCardOutline className="text-green-800" />
-                  <span className='text-green-800'>Pagado</span>
-                </>)
-              : (
-                <>
-                  <IoCardOutline className="text-red-800" />
-                  <span className='text-red-800'>No Pagado</span>
-                </>)}
-          </div>
         </div>
-        <div className="ml-auto flex items-center gap-2">
+        <div className="ml-auto flex items-center gap-1">
           <Button asChild size="sm" variant="outline" className="h-8 gap-1">
             <Link
               href={`/orders/${id}`}
-              className="hover:underline flex items-center gap-2">
+              className="flex items-center gap-2">
               <EyeIcon className="h-3.5 w-3.5" />
               <span className='hidden min-[500px]:block'>Ver pedido</span>
             </Link>
           </Button>
-          <Button
-            onClick={() => {
-              openConfirmationDelete()
-            }}
-            size="sm"
-            variant="destructive"
-            className="h-8 gap-1">
-            <TrashIcon className="h-3.5 w-3.5" />
-            <span className="hover:underline hidden min-[500px]:block">Eliminar</span>
-          </Button>
+          <DropdownMenu>
+            <DropdownMenuTrigger>
+              <Button size="sm" variant="outline" className="h-8 gap-1 focus-visible:ring-0 focus-visible:ring-offset-0">
+
+                <IoEllipsisHorizontalSharp className="h-3.5 w-3.5" />
+                <span className='hidden min-[500px]:block focus-visible:ring-0 focus-visible:ring-offset-0'>Más</span>
+              </Button>
+            </DropdownMenuTrigger>
+            <DropdownMenuContent align="end">
+              <DropdownMenuItem>
+                <Button
+                  onClick={() => { openConfirmationChangeStatus() }}
+                  size="sm"
+                  variant="ghost"
+                  className="h-6 gap-1">
+                  <IoSwapHorizontalOutline className="h-3.5 w-3.5 mr-1" />
+                  <span>Cambiar estado</span>
+                </Button>
+              </DropdownMenuItem>
+              <DropdownMenuItem>
+                <Button
+                  onClick={() => {
+                    openConfirmationDelete()
+                  }}
+                  size="sm"
+                  variant="ghost"
+                  className="h-6 gap-1">
+                  <IoTrashOutline className="h-3.5 w-3.5 mr-1" />
+                  <span>Eliminar pedido</span>
+                </Button>
+              </DropdownMenuItem>
+            </DropdownMenuContent>
+          </DropdownMenu>
         </div>
       </CardHeader>
+      <CardContent className="p-6 text-sm">
+        <div className="grid gap-3">
+          <CardDescription className="flex items-center justify-start gap-2">
+            <span className="font-semibold">Cliente</span>
+            <span>{name}</span>
+          </CardDescription>
+          {/* status paid */}
+          <CardDescription className="flex items-center justify-start gap-2">
+            <span className="font-semibold">Estado del pago</span>
+            {
+              isPaid
+                ? (
+                  <div className='flex items-center'>
+                    <IoCardOutline className="text-green-800" />
+                    <span className='mx-1 text-green-800'>
+                      Pagado
+                    </span>
+                  </div>)
+                : (
+                  <div className='flex items-center'>
+                    <IoCardOutline className="text-red-800" />
+                    <span className='mx-1 text-red-800'>No Pagado</span>
+                  </div>)
+            }
+          </CardDescription>
+          {/* status order */}
+          <CardDescription className="flex items-center justify-start gap-2">
+            <span className="font-semibold">Estado del pedido</span>
+            <StatusNameWithIcon status={status} />
+          </CardDescription>
+        </div>
+      </CardContent>
     </Card>
   )
 }
diff --git a/src/components/products/product-table/ProductTable.tsx b/src/components/products/product-table/ProductTable.tsx
index 98a3595..6412601 100644
--- a/src/components/products/product-table/ProductTable.tsx
+++ b/src/components/products/product-table/ProductTable.tsx
@@ -1,12 +1,19 @@
 import Link from 'next/link'
 import { DeleteButtonProduct, ProductImage } from '@/components'
-import { type Size, type ProductWithStock } from '@/interfaces'
+import { type Size, type ProductWithStock, type ValidGender } from '@/interfaces'
 import { currencyFormat } from '@/utils'
 
 interface Props {
   products: ProductWithStock[]
 }
 
+const genderSpanish: Record<ValidGender, string> = {
+  men: 'Hombre',
+  women: 'Mujer',
+  kid: 'Niño',
+  unisex: 'Unisex'
+}
+
 export const ProductTable = ({ products }: Props) => {
   if (products.length === 0 || !products) {
     return (
@@ -75,7 +82,7 @@ export const ProductTable = ({ products }: Props) => {
                   {currencyFormat(Number(product.price))}
                 </td>
                 <td className="text-sm text-gray-900 font-light px-6 py-4 whitespace-nowrap">
-                  {product.gender}
+                  {genderSpanish[product.gender]}
                 </td>
                 <td className="text-sm text-gray-900 font-bold px-6 py-4 whitespace-nowrap">
                   {product.stock.inStock}
diff --git a/src/interfaces/index.ts b/src/interfaces/index.ts
index be9846e..6db7b17 100644
--- a/src/interfaces/index.ts
+++ b/src/interfaces/index.ts
@@ -7,3 +7,5 @@ export * from './address/address.interface'
 export * from './paypal/paypal.interface'
 
 export * from './users/user.interface'
+
+export * from './orders/order.interface'
diff --git a/src/utils/index.ts b/src/utils/index.ts
index 72dfbce..b2afcd1 100644
--- a/src/utils/index.ts
+++ b/src/utils/index.ts
@@ -2,3 +2,4 @@ export * from './generatePaginationNumbers'
 export * from './sleep'
 export * from './currencyFormat'
 export * from './validatePageNumber'
+export * from './statusNameSpanish'
