diff --git a/src/actions/products/create-update-product.ts b/src/actions/products/create-update-product.ts
index 2c7ee5d..80d235c 100644
--- a/src/actions/products/create-update-product.ts
+++ b/src/actions/products/create-update-product.ts
@@ -34,20 +34,6 @@ const productSchema = z.object({
   gender: z.nativeEnum(Gender)
 })
 
-//! Create product
-// cuando creo un producto recibo un arreglo de tallas, por cada talla creo un stock para el producto, es decir creo el producto y el stock de cada talla
-
-//! Acualizar producto
-// cuando actualizo un producto recibo solo una talla
-
-// en el formulario la talla por defecto es a la que se entro al hacer click en editar producto, si el usuario cambia la talla desde el selector será la talla que se actualizará
-
-// server action
-// recibo el producto y la talla que se va a actualizar
-// consulto si la talla que recibo existe en el stock, si existe actualizo el stock de esa talla, si no existe creo un nuevo stock para esa talla
-
-// que hago si el cliente quiere agregar una talla distinta, cuando se recibe la información a actulizar es decir cuando se esta actualizando el producto se debe de consultar si la talla que esta recibiendo existe en el stock, si no existe se debe de crear un nuevo stock para esa talla, si existe se debe de actualizar el stock de esa talla para ambos casos actualizo el producto.
-
 export const createUpdateProduct = async (formData: FormData) => {
   const data = Object.fromEntries(formData)
 
@@ -174,12 +160,6 @@ export const createUpdateProduct = async (formData: FormData) => {
       message: 'Error al crear/actualizar el producto'
     }
   }
-
-  // return {
-  //   ok: false,
-  //   message: 'Error al crear/actualizar el producto',
-  //   product: []
-  // }
 }
 
 const getproductStockIdByProductIdSize = async (productId: string, size: Size) => {
diff --git a/src/actions/products/get-categories.ts b/src/actions/products/get-categories.ts
index ac38140..a75f2fd 100644
--- a/src/actions/products/get-categories.ts
+++ b/src/actions/products/get-categories.ts
@@ -1,19 +1,8 @@
 'use server'
 
 import { type Category } from '@/interfaces'
-// import { validateUserAdmin } from '@/actions'
-// import { type Category } from '@/interfaces'
 import prisma from '@/lib/prisma'
 
-// interface IResponseCategory {
-//   ok?: boolean
-//   message?: string
-//   categories?: Array<{
-//     id: string
-//     name: string
-//   }>
-// }
-
 export const getCategories = async (): Promise<Category[] | null> => {
   const categories: Category[] = await prisma.category.findMany({
     select: {
diff --git a/src/actions/products/product-stock-pagination.ts b/src/actions/products/product-stock-pagination.ts
index a504451..31b4d3f 100644
--- a/src/actions/products/product-stock-pagination.ts
+++ b/src/actions/products/product-stock-pagination.ts
@@ -2,7 +2,6 @@
 
 import { getSizesProductStock } from './get-sizes-product-stock'
 import { type ProductWithStock } from '@/interfaces'
-// import { revalidatePath } from 'next/cache'
 import prisma from '@/lib/prisma'
 import { validatePageNumber } from '@/utils'
 
diff --git a/src/app/(shop)/gender/[gender]/page.tsx b/src/app/(shop)/gender/[gender]/page.tsx
index 47e31eb..ef6d2e1 100644
--- a/src/app/(shop)/gender/[gender]/page.tsx
+++ b/src/app/(shop)/gender/[gender]/page.tsx
@@ -47,11 +47,6 @@ export default async function GenderByPage({ params, searchParams }: Props) {
   const query = searchParams.query || ''
   const page = searchParams.page ? Number(searchParams.page) : 1
 
-  // const allowedCategories = ['men', 'women', 'kid']
-  // if (!allowedCategories.includes(gender)) {
-  //   notFound()
-  // }
-
   const result = await getPaginationProductsWithImages({ page, query, gender })
 
   if (!result) {
diff --git a/src/app/(shop)/privacy/page.tsx b/src/app/(shop)/privacy/page.tsx
index 33d5b14..25eed9d 100644
--- a/src/app/(shop)/privacy/page.tsx
+++ b/src/app/(shop)/privacy/page.tsx
@@ -1,7 +1,9 @@
 import Link from 'next/link'
+import { getEmailAdmin } from '@/actions'
 import { ButtonBackPage, Title } from '@/components'
 
 export default async function PrivacyPage() {
+  const { emailAdmin } = await getEmailAdmin()
   return (
     <>
       <Title title="Políticas de privacidad" subtitle='' />
@@ -49,7 +51,7 @@ export default async function PrivacyPage() {
         </div>
 
         <div className='flex justify-center w-full gap-4  m-8 text-center mx-auto'>
-          <Link className='btn-primary' target='_blank' href={'https://wa.me/529811250049'}>
+          <Link className='btn-primary' target='_blank' href={`mailto:${emailAdmin?.email}?subject=Consulta%20sobre%20Política%20de%20Privacidad`}>
             Contáctanos
           </Link>
 
diff --git a/src/app/(shop)/terms/page.tsx b/src/app/(shop)/terms/page.tsx
index c569d06..36ce443 100644
--- a/src/app/(shop)/terms/page.tsx
+++ b/src/app/(shop)/terms/page.tsx
@@ -1,7 +1,9 @@
 import Link from 'next/link'
+import { getEmailAdmin } from '@/actions'
 import { Title, ButtonBackPage } from '@/components'
 
 export default async function TermsPage() {
+  const { emailAdmin } = await getEmailAdmin()
   return (
     <>
       <Title title="Términos y condiciones" subtitle='' />
@@ -43,7 +45,7 @@ export default async function TermsPage() {
         </div>
 
         <div className='flex justify-center w-full gap-4  m-8 text-center mx-auto'>
-          <Link className='btn-primary' target='_blank' href={'https://wa.me/529811250049'}>
+          <Link className='btn-primary' target='_blank' href={`mailto:${emailAdmin?.email}?subject=Consulta%20sobre%20Términos%20y%20Condiciones`}>
             Contáctanos
           </Link>
 
